<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>Handling disconnects during IDLE</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="57868354-c9ea-44a5-9e06-3c239395b4ed" /><meta name="Description" content="This example demonstrates a way to deal with connection resets while receiving IMAP IDLE notifications." /><meta name="Microsoft.Help.ContentType" content="Samples" /><link rel="stylesheet" type="text/css" href="../styles/Presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><xml><MSHelp:Keyword Index="A" Term="57868354-c9ea-44a5-9e06-3c239395b4ed" /><MSHelp:Attr Name="RevisionNumber" Value="1" /><MSHelp:Attr Name="AssetID" Value="57868354-c9ea-44a5-9e06-3c239395b4ed" /><MSHelp:Attr Name="Abstract" Value="This example demonstrates a way to deal with connection resets while receiving IMAP IDLE notifications." /><MSHelp:Attr Name="TopicType" Value="kbSampleProd" /><MSHelp:Attr Name="Locale" Value="en-us" /></xml><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">S22.Imap Documentation</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Handling disconnects during IDLE</span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"></span><div class="introduction"><p>This example demonstrates a way to deal with connection resets while receiving IMAP IDLE notifications.</p></div><a name="Section1"> </a><h1 class="heading"><span onclick="ExpandCollapse(sectionToggleID0EBAAA)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggleID0EBAAA, event)" tabindex="0"><img id="sectionToggleID0EBAAA" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Handling disconnects during IDLE.</span></h1><div id="sectionSectionID0EBAAA" class="section" name="collapseableSection" style=""><p>
			The S22.Imap library does not attempt to automatically reconnect if the underlying
			network connection is reset or the server unexpectedly closes the connection while
			listening for IMAP IDLE notifications. Instead it raises the
			<span sdata="cer" target="S22.Imap.ImapClient.IdleError"><span class="nolink">[S22.Imap.ImapClient.IdleError]</span></span>
			event to which you can subscribe in order to learn the reason for the connection
			reset and then deal with the situation as you see fit.
		</p><p>
			The following naive example demonstrates how to perform an automatic reconnect if
			the connection to the server is lost.
		</p><p><span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img style="margin-right: 5px;" src="../icons/CopyCode.gif" />Copy</span>C#</div><div class="code"><pre xml:space="preserve"><span class="highlight-keyword">using</span> S22.Imap;
<span class="highlight-keyword">using</span> System;

<span class="highlight-keyword">namespace</span> ConsoleApplication1 {
    <span class="highlight-keyword">class</span> Program {
        <span class="highlight-keyword">static</span> AutoResetEvent reconnectEvent = <span class="highlight-keyword">new</span> AutoResetEvent(<span class="highlight-keyword">false</span>);
        <span class="highlight-keyword">static</span> ImapClient client;

        <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> Main(<span class="highlight-keyword">string</span>[] args) {
            <span class="highlight-keyword">try</span> {
                <span class="highlight-keyword">while</span> (<span class="highlight-keyword">true</span>) {
                    Console.Write(<span class="highlight-literal">"Connecting..."</span>);
                    InitializeClient();
                    Console.WriteLine(<span class="highlight-literal">"OK"</span>);

                    reconnectEvent.WaitOne();
                }
            } <span class="highlight-keyword">finally</span> {
                <span class="highlight-keyword">if</span> (client != <span class="highlight-keyword">null</span>)
                    client.Dispose();
            }
        }

        <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> InitializeClient() {
            <span class="highlight-comment">// Dispose of existing instance, if any.</span>
            <span class="highlight-keyword">if</span> (client != <span class="highlight-keyword">null</span>)
                client.Dispose();
            client = <span class="highlight-keyword">new</span> ImapClient(<span class="highlight-literal">"imap.gmail.com"</span>, <span class="highlight-number">993</span>, <span class="highlight-literal">"username"</span>, <span class="highlight-literal">"password"</span>, AuthMethod.Login, <span class="highlight-keyword">true</span>);
            <span class="highlight-comment">// Setup event handlers.</span>
            client.NewMessage += client_NewMessage;
            client.IdleError += client_IdleError;
        }

        <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> client_IdleError(<span class="highlight-keyword">object</span> sender, IdleErrorEventArgs e) {
            Console.Write(<span class="highlight-literal">"An error occurred while idling: "</span>);
            Console.WriteLine(e.Exception.Message);

            reconnectEvent.Set();
        }

        <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> client_NewMessage(<span class="highlight-keyword">object</span> sender, IdleMessageEventArgs e) {
            Console.WriteLine(<span class="highlight-literal">"Got a new message, uid = "</span> + e.MessageUID);
        }
    }
}</pre></div></span></p></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"></span></div></div></body></html>